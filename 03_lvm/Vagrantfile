# -*- mode: ruby -*-
# vim: set ft=ruby :
ENV["LC_ALL"] = "en_US.UTF-8"

# Require the reboot plugin.
require './vagrant-plugins/vagrant-provision-reboot-plugin'

MACHINES = {
    :lvm => {
        :box_name => "centos/7",
        :box_version => "1804.02",
        :ip_addr => '192.168.11.101',
        :disks => {
            :sata1 => {
                :dfile => './disks/sata1.vdi',
                :size => 10240,
                :port => 1
            },
            :sata2 => {
                :dfile => './disks/sata2.vdi',
                :size => 2048, # Megabytes
                :port => 2
            },
            :sata3 => {
                :dfile => './disks/sata3.vdi',
                :size => 1024, # Megabytes
                :port => 3
            },
            :sata4 => {
                :dfile => './disks/sata4.vdi',
                :size => 1024,
                :port => 4
            }
        }
    },
}

Vagrant.configure("2") do |config|

    config.vm.box_version = "1804.02"
    MACHINES.each do |boxname, boxconfig|

        config.vbguest.auto_update = false
        config.vm.synced_folder ".", "/vagrant", disabled: true

        config.vm.provision :shell, path: "./scripts/01_install_additional_tools.sh"
        config.vm.provision :shell, path: "./scripts/02_transfer_root_to_new_part.sh"
        config.vm.provision :unix_reboot
        config.vm.provision :shell, path: "./scripts/03_changing_size_and_transfer_root.sh"
        config.vm.provision :unix_reboot
        config.vm.provision :shell, path: "./scripts/04_removing_temporary_disk.sh"
        config.vm.provision :shell, path: "./scripts/05_create_home_and_var.sh"
        config.vm.provision :unix_reboot
        config.vm.provision :shell, path: "./scripts/06_snapshot_volume.sh"

        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s

            #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

            box.vm.network "private_network", ip: boxconfig[:ip_addr]

            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "256"]
                needsController = false

                boxconfig[:disks].each do |dname, dconf|

                    if not File.exist?(dconf[:dfile])
                        vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                        needsController =  true
                    end

                end

                if needsController == true
                    vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                    boxconfig[:disks].each do |dname, dconf|
                            vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                    end
                end
            end

        box.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh
            cp ~vagrant/.ssh/auth* ~root/.ssh
            SHELL

        end
    end
end

